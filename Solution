import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;

public class Solution {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int size = sc.nextInt();
        int[] collection = new int[size];
        for (int i = 0; i < collection.length; i++) {
            collection[i] = sc.nextInt();
        }
        System.out.println(solve(collection));

        sc.close();
    }

    static int solve(int[] collection) {
        int minDistance = Integer.MAX_VALUE;
        Map<Integer, Integer> value2lastIndex = new HashMap<Integer, Integer>();
        for (int i = 0; i < collection.length; i++) {
            if (value2lastIndex.containsKey(collection[i])) {
                minDistance = Math.min(minDistance, i - value2lastIndex.get(collection[i]));
            }

            value2lastIndex.put(collection[i], i);
        }

        return (minDistance == Integer.MAX_VALUE) ? -1 : minDistance;
    }
}
